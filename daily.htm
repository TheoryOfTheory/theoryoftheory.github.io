<script src="https://yayinternets.github.io/datascripts.js"></script>
<script src="https://yayinternets.github.io/domscripts.js"></script>
<link rel="stylesheet" href="https://yayinternets.github.io/datacss.css"><script>window.addEventListener('load', function() {

dom_changeTitleAndFavicon("ŸÖŸàÿ≥ŸäŸÇŸâ", "‚ô¨üéº" );

// var text = 'Find me at http://www.example.com and also at http://stackoverflow.com';
// console.log(urlify(text))
//var sLine = "Find me at http://www.example.com and also at http://stackoverflow.com";
//console.log(superurlify(sLine));
function urlify(text) { // via https://stackoverflow.com/questions/1500260/detect-urls-in-text-with-javascript
  var urlRegex = /(https?:\/\/[^\s]+)/g;
  return text.replace(urlRegex, function(url) {
    return '<a href="' + url + '">' + url + '</a>';
  })
  // or alternatively
  // return text.replace(urlRegex, '<a href="$1">$1</a>')
}
function superurlify(text) { // mine - ?needs to be refactored?
    var aURLMatches = text.match(/(https?:\/\/[^\s]+)/g); if (aURLMatches) {} else {aURLMatches = [];}
    var oReturn = {};
    text = text.replace(/(https?:\/\/[^\s]+)/g, "");
    if (text=="") {
        text = aURLMatches.join(" ");
    }
    oReturn.text = text;
    oReturn.href = "";
    if (aURLMatches) {
        if (aURLMatches.length == 1) {
            oReturn.href = `<a target="_blank" href="${aURLMatches[0]}">${text}</a>`;
        } else if (aURLMatches.length > 1) {
            oReturn.href = `${text}` + aURLMatches.reduce((a,e,i)=>{return a + `<a href="${e}">link${i+1}</a>`}, "")
        }
    }
    // return text;
    return oReturn;
}
// dollarstore-markdown-ify - need to refactor but this is a mess and is only really specialized for my music playlist & daily list
dollarstoreMarkdownSearchTreeify = function () {
    sBody = document.body.innerText;
    bBulletPoint = false;
    document.body.innerHTML = sBody.split("\n").reduce((a, o, i, e)=>{
        if (o.match(/^\# /g)) {
            o = o.replace(/^\# /g, "<h2>") + "</h2>"; return a + o;
        } else if ("match" == "* ") {
            // if lastIterationWasNotBullet
            // <ul>
            bBulletPoint = true;
        } else if ("match" == "on bullet points, title!!url, and so on..") {
            
        } else { // assume just searchtree-ify whatever is on the line?  or introduce a notation?
          aHrefYoutube = `https://www.youtube.com/results?search_query=${superurlify(o).text}`; // youtube &loop=0
          aHrefDuck = `https://duckduckgo.com/?q=%5C${superencode("youtube " + superurlify(o).text)}`; // duckduckgo I'm feeling lucky, The %5c code above is the indicator for loading the page directly without search results (similar to the BtnI of Google)
          aHrefSearchTree = `https://theoryoftheory.github.io/searchtree.htm?search=${superencode(superurlify(o).text)}`; // searchtree
          if (o.length>0) {
               return a + `<a target='_blank' href='${aHrefYoutube}'>‚ñ∂Ô∏è</a>&nbsp;&nbsp;&nbsp;<a target='_blank' href='${aHrefDuck}'>ü¶Ü</a>&nbsp;&nbsp;&nbsp;<a target='_blank' href='${aHrefSearchTree}'>ìÄÇ</a>&nbsp;&nbsp;&nbsp;<span style="font-size:8px;">${superurlify(o).href}</span>${superurlify(o).text}<br />`;
          } else {
               return a + `<br />`
          }
        }
    }, "");
}
dollarstoreMarkdownSearchTreeify();    
    

}, false )</script>#  Rust lists/multi
<pre>
# prereqs: https://www.reddit.com/r/rust/comments/p07h7d/whats_a_good_tech_stack_for_rust_and_web/

https://www.reddit.com/r/learnrust+rust
https://twitter.com/i/lists/1652712548288872448
https://rust-lang.zulipchat.com/
https://app.element.io/#/room/#rust:matrix.org
https://www.facebook.com/groups/1412062792318164
https://www.facebook.com/groups/872919370237098/
https://www.facebook.com/groups/874560292553987/
https://www.linkedin.com/groups/12495575/
https://www.linkedin.com/groups/12566531/
https://www.linkedin.com/groups/12655007/
https://www.linkedin.com/groups/8854292/
https://www.linkedin.com/groups/6931877/
https://www.linkedin.com/groups/12537155/
https://www.linkedin.com/groups/4973032

# React/JS multi
# pre-reqs - install a "T3" react stack for development - https://www.reddit.com/r/react/comments/xqy5n3/whats_your_tech_stack_as_a_react_developer/
https://github.com/typescript-cheatsheets/react


# ML multi
# pre-reqs:

# CyberCats lists/multi - 
# prereqs: publish Geometrics Deep Learning and ACT
https://twitter.com/i/lists/1652844213233504256

# Cybersecurity list/multis - 
# reqs: https://www.reddit.com/r/msp/comments/10rupbe/complete_cyber_security_stack/

https://www.reddit.com/r/ComputerSecurity+CyberSecurityJobs+Cybersecurity101+Kalilinux+OperationsSecurity+cybersecurity+cybersecurity_help+netdef+netsec+nmap+opsec/

https://www.linkedin.com/groups/137157/
https://www.linkedin.com/groups/3090362/
https://www.linkedin.com/groups/3799371/
https://www.linkedin.com/groups/1807664/
https://www.linkedin.com/groups/6624427/
https://www.linkedin.com/groups/13562036/

</pre>