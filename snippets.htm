<script src="https://yayinternets.github.io/datascripts.js"></script>
<script src="https://yayinternets.github.io/domscripts.js"></script>
<link rel="stylesheet" href="https://yayinternets.github.io/datacss.css">
<script>window.addEventListener('load', function() { dom_changeTitleAndFavicon("Code Snippets", "https://letshirepro.com/icons/freelauncer.ico" ); }, false )</script>

<!-- editor_ace_ify vs editor_codeMirror_ify -->
<script type="text/javascript">document.addEventListener("DOMContentLoaded", function(event) { editor_codeMirror_ify($$$$("textarea")); }); </script>

<p class="superp">a few commonly-used scripts/gists/snippets, or scripts pending to be refactored into a library</p>

<textarea>
<script type="text/javascript">document.addEventListener("DOMContentLoaded", function(event) { /* code */ }); </script>
var awaitingSetTimeout = async (iMs) => new Promise((resolve) => setTimeout(() => { "code"; resolve('done') }, iMs )); await awaitingSetTimeout(1000);

&lt;script src=&quot;https://yayinternets.github.io/datascripts.js&quot;&gt;&lt;/script&gt;
&lt;script src=&quot;https://yayinternets.github.io/domscripts.js&quot;&gt;&lt;/script&gt;
&lt;link rel=&quot;stylesheet&quot; href=&quot;https://yayinternets.github.io/datacss.css&quot;&gt;
<script>window.addEventListener('load', function() { dom_changeTitleAndFavicon("Code Snippets", "https://letshirepro.com/icons/freelauncer.ico" ); }, false )</script>
<title>favicon emoji</title>
<link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>ðŸ“‹</text></svg>">


domLoadScripts_Link=function(t){Array.isArray(t)||(t=[t]),t.forEach((function(t){var e=document.getElementsByTagName("head")[0],r=document.createElement("script");r.setAttribute("src",t.trim()),e.appendChild(r)}))};
// load scripts
domLoadScripts_Link(["https://yayinternets.github.io/datascripts.js", "https://yayinternets.github.io/domscripts.js"]);
domLoadStyles_Link("https://yayinternets.github.io/datacss.css");
copy(toTabDelimited(dom_deconstructDOM()));

//ffmpeg
ffmpeg -i video.webm video.mp4
ffmpeg -i filename.mp4 filename.mp3


// OLD script snippets

// for loop one-liner
for (i=2e3;i--;){console.log("blah");}
// head DOMContentLoaded
<script type="text/javascript">document.addEventListener("DOMContentLoaded", function(event) { "insert_here"; }); </script>


// background tessellation with gradient white-pink fade
domLoadStyles_CSS(`
body {
  background-image: linear-gradient(to bottom, rgba(245, 246, 252, 0.90), rgba(255, 153, 230, 0.73)),
    url('https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/e4e73785-8251-4d2d-97c1-6d5e83506f32/d4um9pc-cde43ba1-e4b8-479b-b211-f84dbac776a4.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7InBhdGgiOiJcL2ZcL2U0ZTczNzg1LTgyNTEtNGQyZC05N2MxLTZkNWU4MzUwNmYzMlwvZDR1bTlwYy1jZGU0M2JhMS1lNGI4LTQ3OWItYjIxMS1mODRkYmFjNzc2YTQuanBnIn1dXSwiYXVkIjpbInVybjpzZXJ2aWNlOmZpbGUuZG93bmxvYWQiXX0.13_myIpFjJbN0FwsvLky-TTONMBCDHdnRyRAMW_U_Rs');
  background-repeat: repeat;
  
}
`)


// more promises 
const user = await getUser();
const products = await getProducts();
 vs
const [user, products] = await Promise.all([
getUser(), getProducts()
i);



// 4 Ways to make async function process asynchronously and wait for each other to finish after another based on an initial Array
// via https://stackoverflow.com/questions/40328932/javascript-es6-promise-for-loop/40329190
// javascript 12/28 notes asynch "cascacding"? - refactor into domscripts.notes/hints?

aArray = $$$a(".btnsubmit_single_transfer");

// With reduce
aArray.reduce((a,e,i)=>{
    return a.then(() => submit_single_transfer(e))
     .then(() => console.log(i))
}, Promise.resolve() );


// With for loop
for (let i = 0, p = Promise.resolve(); i < aArray.length; i++) {
    p = p.then(() => submit_single_transfer(aArray[i]))
         .then(() => console.log(i));
}


// With a function passing itself as resolution-callback
(function loop(i) {
    if (i >= aArray.length) return; // all done
    submit_single_transfer(aArray[i]).then(() => {
        console.log(i);
        loop(i+1);
    });
})(0);


// With async/await
(async function loop() {
    for (let i = 0; i < aArray.length; i++) {
        await submit_single_transfer(aArray[i]);
        console.log(i);
    }
})();


</textarea>

<a href="https://github.com/snoopysecurity/Vulnerable-Code-Snippets">Vulnerable Code Snippets</a>
<a href="https://flexboxfroggy.com/">flexboxfroggy</a><a href="https://cssgridgarden.com">gridgarden</a>